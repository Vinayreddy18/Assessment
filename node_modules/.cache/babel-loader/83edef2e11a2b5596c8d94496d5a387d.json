{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VINAY REDDY\\\\Downloads\\\\clones\\\\dashboard-master\\\\src\\\\components\\\\MyLine.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst MyLine = ({\n  color,\n  height,\n  width\n}) => {\n  const [data, setData] = useState({});\n  const backgroundColor = color.backgroundColor;\n  const borderColor = color.borderColor;\n\n  const line = () => {\n    setData({\n      labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"],\n      datasets: [{\n        data: [3, 2, 3, 2, 2, 3, 1, 2, 2, 4],\n        fill: true,\n        backgroundColor: `${backgroundColor}`,\n        borderColor: `${borderColor}`,\n        borderWidth: 2,\n        pointBorderColor: \"#2984c5\",\n        pointBackgroundColor: \"#fff\",\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"#2984c5\",\n        pointHoverBorderColor: \"rgba(41, 132, 197, 0.5)\",\n        pointHoverBorderWidth: 7,\n        pointRadius: 0,\n        pointHitRadius: 30,\n        type: \"line\",\n        lineTension: 0\n      }]\n    });\n  };\n\n  useEffect(() => {\n    line();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: height,\n      width: width,\n      filter: 'drop-shadow(0 0 0.15rem #d8d8e2)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: data,\n    options: {\n      responsive: true,\n      maintainAspectRatio: false,\n      tooltips: {\n        titleAlign: \"center\",\n        caretPadding: 5,\n        cornerRadius: 5,\n        xPadding: 20,\n        position: \"nearest\",\n        bodyAlign: \"center\",\n        bodyFontStyle: \"bold\"\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true,\n            display: false\n          },\n          gridLines: {\n            display: false\n          }\n        }],\n        xAxes: [{\n          ticks: {\n            display: false\n          },\n          gridLines: {\n            display: false\n          }\n        }]\n      },\n      legend: {\n        display: false\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default MyLine;","map":{"version":3,"sources":["C:/Users/VINAY REDDY/Downloads/clones/dashboard-master/src/components/MyLine.jsx"],"names":["React","useState","useEffect","Line","MyLine","color","height","width","data","setData","backgroundColor","borderColor","line","labels","datasets","fill","borderWidth","pointBorderColor","pointBackgroundColor","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","type","lineTension","filter","responsive","maintainAspectRatio","tooltips","titleAlign","caretPadding","cornerRadius","xPadding","position","bodyAlign","bodyFontStyle","scales","yAxes","ticks","beginAtZero","display","gridLines","xAxes","legend"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst MyLine = ({ color, height, width }) => {\n  const [data, setData] = useState({});\n  const backgroundColor = color.backgroundColor;\n  const borderColor = color.borderColor; \n\n  const line = () => {\n    setData({\n      labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"],\n      datasets: [\n        {\n          data: [3, 2, 3, 2, 2, 3, 1, 2, 2, 4],\n          fill: true,\n          backgroundColor: `${backgroundColor}`,\n          borderColor: `${borderColor}`,\n          borderWidth: 2,\n          pointBorderColor: \"#2984c5\",\n          pointBackgroundColor: \"#fff\",\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"#2984c5\",\n          pointHoverBorderColor: \"rgba(41, 132, 197, 0.5)\",\n          pointHoverBorderWidth: 7,\n          pointRadius: 0,\n          pointHitRadius: 30,\n          type: \"line\",\n          lineTension: 0,\n        },\n      ],\n    });\n  };\n\n  useEffect(() => {\n    line();\n  }, []);\n\n  return (\n    <div style={{ height: height , width: width, filter: 'drop-shadow(0 0 0.15rem #d8d8e2)' }}>\n      <Line\n        data={data}\n        options={{\n          responsive: true,\n          maintainAspectRatio: false,\n          tooltips: {\n            titleAlign: \"center\",\n              caretPadding: 5,\n              cornerRadius: 5,\n              xPadding: 20,\n              position: \"nearest\",\n              bodyAlign: \"center\",\n              bodyFontStyle: \"bold\",\n          },\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                  display: false,\n                },\n                gridLines: {\n                  display: false,\n                },\n              },\n            ],\n            xAxes: [\n              {\n                ticks: {\n                  display: false,\n                },\n                gridLines: {\n                  display: false,\n                },\n              },\n            ],\n          },\n          legend: {\n            display: false,\n          },\n        }}\n      />\n    </div>\n  );\n};\n\nexport default MyLine;\n"]},"metadata":{},"sourceType":"module"}