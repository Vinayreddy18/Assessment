{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VINAY REDDY\\\\Downloads\\\\clones\\\\dashboard-master\\\\src\\\\components\\\\MyChart.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst MyChart = ({\n  month,\n  year\n}) => {\n  const [chartData, setChartData] = useState({});\n\n  const chart = () => {\n    setChartData({\n      labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\"],\n      datasets: [{\n        label: ' Visitors',\n        barThickness: \"9\",\n        backgroundColor: 'rgb(31, 110, 215)',\n        hoverBackgroundColor: '#1a5199',\n        minBarLength: 1,\n        data: [3, 1, 4, 2, 1, 2, 1, 3, 1, 4, 2, 3, 4, 1, 2, 4, 2, 1, 2, 3, 2, 1, 4, 3, 1, 3, 2, 1, 4, 1, 2]\n      }]\n    });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'relative',\n      height: \"250px\",\n      width: \"90%\",\n      margin: \"0 auto\",\n      filter: 'drop-shadow(0 0 0.15rem #ddddf0)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: chartData,\n    options: {\n      title: {\n        display: true,\n        text: `${month} ${year}`,\n        fontSize: 16\n      },\n      responsive: true,\n      aspectRatio: 2,\n      maintainAspectRatio: false,\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true,\n            display: false\n          }\n        }],\n        xAxes: [{\n          gridLines: {\n            display: false\n          }\n        }]\n      },\n      legend: {\n        display: true,\n        position: \"top\"\n      },\n      tooltips: {\n        backgroundColor: 'rgb(255, 255, 255)',\n        borderColor: 'rgb(156, 174, 211)',\n        borderWidth: 1,\n        titleFontColor: \"#5f5b66\",\n        titleAlign: \"center\",\n        caretPadding: 15,\n        cornerRadius: 5,\n        xPadding: 20,\n        position: \"nearest\",\n        bodyAlign: \"center\",\n        bodyFontStyle: \"bold\",\n        yPadding: 20,\n        callbacks: {\n          title: function (tooltipItem, data) {\n            return `${data.labels[tooltipItem[0].index].toLocaleString(\"en-US\")} ${month} ${year}`.toLocaleString(\"en-US\");\n          },\n          label: function (tooltipItem, data) {\n            var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n            if (label) {\n              label += ': ';\n            }\n\n            label += Math.round(tooltipItem.yLabel * 100) / 100;\n            return label;\n          },\n          labelTextColor: function (tooltipItem, chart) {\n            return '#000';\n          }\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default MyChart;","map":{"version":3,"sources":["C:/Users/VINAY REDDY/Downloads/clones/dashboard-master/src/components/MyChart.js"],"names":["React","useState","useEffect","Bar","MyChart","month","year","chartData","setChartData","chart","labels","datasets","label","barThickness","backgroundColor","hoverBackgroundColor","minBarLength","data","position","height","width","margin","filter","title","display","text","fontSize","responsive","aspectRatio","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","xAxes","gridLines","legend","tooltips","borderColor","borderWidth","titleFontColor","titleAlign","caretPadding","cornerRadius","xPadding","bodyAlign","bodyFontStyle","yPadding","callbacks","tooltipItem","index","toLocaleString","datasetIndex","Math","round","yLabel","labelTextColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAqB;AAEnC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;;AACA,QAAMQ,KAAK,GAAG,MAAM;AAClBD,IAAAA,YAAY,CAAC;AACXE,MAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,IAA9C,EACV,IADU,EACJ,IADI,EACE,IADF,EACQ,IADR,EACc,IADd,EACoB,IADpB,EAC0B,IAD1B,EACgC,IADhC,EACsC,IADtC,EAC4C,IAD5C,EAEZ,IAFY,EAEN,IAFM,EAEA,IAFA,EAEM,IAFN,EAEY,IAFZ,EAEkB,IAFlB,EAEwB,IAFxB,EAE8B,IAF9B,EAEoC,IAFpC,EAE0C,IAF1C,EAEgD,IAFhD,CADG;AAIfC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,WADT;AAEEC,QAAAA,YAAY,EAAE,GAFhB;AAGEC,QAAAA,eAAe,EAAE,mBAHnB;AAIEC,QAAAA,oBAAoB,EAAE,SAJxB;AAKEC,QAAAA,YAAY,EAAE,CALhB;AAMEC,QAAAA,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,EAAqB,CAArB,EAAuB,CAAvB,EAAyB,CAAzB,EAA2B,CAA3B,EAA6B,CAA7B,EAA+B,CAA/B,EAAiC,CAAjC,EAAmC,CAAnC,EAAqC,CAArC,EAAuC,CAAvC,EAAyC,CAAzC,EAA2C,CAA3C,EAA6C,CAA7C,EAA+C,CAA/C,EAAiD,CAAjD,EAAmD,CAAnD,EAAqD,CAArD,EAAuD,CAAvD,EAAyD,CAAzD,EAA2D,CAA3D,EAA6D,CAA7D;AANR,OADQ;AAJK,KAAD,CAAZ;AAeD,GAhBD;;AAkBFf,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK;AACN,GAFQ,EAEN,EAFM,CAAT;AAMA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACS,MAAAA,QAAQ,EAAE,UAAX;AAAuBC,MAAAA,MAAM,EAAE,OAA/B;AAAwCC,MAAAA,KAAK,EAAE,KAA/C;AAAsDC,MAAAA,MAAM,EAAE,QAA9D;AAAwEC,MAAAA,MAAM,EAAE;AAAhF,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AACE,IAAA,IAAI,EAAEf,SADR;AAEE,IAAA,OAAO,EAAE;AACLgB,MAAAA,KAAK,EAAE;AACHC,QAAAA,OAAO,EAAE,IADN;AAEHC,QAAAA,IAAI,EAAG,GAAEpB,KAAM,IAAGC,IAAK,EAFpB;AAGHoB,QAAAA,QAAQ,EAAE;AAHP,OADF;AAMPC,MAAAA,UAAU,EAAE,IANL;AAOPC,MAAAA,WAAW,EAAE,CAPN;AAQPC,MAAAA,mBAAmB,EAAE,KARd;AASPC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,CAAC;AACTC,UAAAA,KAAK,EAAE;AACNC,YAAAA,WAAW,EAAE,IADP;AAENT,YAAAA,OAAO,EAAE;AAFH;AADE,SAAD,CADD;AAONU,QAAAA,KAAK,EAAE,CAAC;AACNC,UAAAA,SAAS,EAAE;AACTX,YAAAA,OAAO,EAAE;AADA;AADL,SAAD;AAPD,OATD;AAuBPY,MAAAA,MAAM,EAAC;AACLZ,QAAAA,OAAO,EAAC,IADH;AAELN,QAAAA,QAAQ,EAAE;AAFL,OAvBA;AA0BJmB,MAAAA,QAAQ,EAAE;AACXvB,QAAAA,eAAe,EAAE,oBADN;AAEXwB,QAAAA,WAAW,EAAE,oBAFF;AAGXC,QAAAA,WAAW,EAAE,CAHF;AAIXC,QAAAA,cAAc,EAAE,SAJL;AAKXC,QAAAA,UAAU,EAAE,QALD;AAMXC,QAAAA,YAAY,EAAE,EANH;AAOXC,QAAAA,YAAY,EAAE,CAPH;AAQXC,QAAAA,QAAQ,EAAE,EARC;AASX1B,QAAAA,QAAQ,EAAE,SATC;AAUX2B,QAAAA,SAAS,EAAE,QAVA;AAWXC,QAAAA,aAAa,EAAE,MAXJ;AAYXC,QAAAA,QAAQ,EAAE,EAZC;AAaXC,QAAAA,SAAS,EAAE;AACTzB,UAAAA,KAAK,EAAE,UAAS0B,WAAT,EAAsBhC,IAAtB,EAA4B;AAE/B,mBACX,GAAGA,IAAI,CAACP,MAAL,CAAYuC,WAAW,CAAC,CAAD,CAAX,CAAeC,KAA3B,EAAkCC,cAAlC,CAAiD,OAAjD,CAA2D,IAAG9C,KAAM,IAAGC,IAAK,EAAhF,CAAkF6C,cAAlF,CAAiG,OAAjG,CADY;AAGD,WANM;AAOPvC,UAAAA,KAAK,EAAE,UAASqC,WAAT,EAAsBhC,IAAtB,EAA4B;AACjC,gBAAIL,KAAK,GAAGK,IAAI,CAACN,QAAL,CAAcsC,WAAW,CAACG,YAA1B,EAAwCxC,KAAxC,IAAiD,EAA7D;;AAEA,gBAAIA,KAAJ,EAAW;AACPA,cAAAA,KAAK,IAAI,IAAT;AACH;;AACDA,YAAAA,KAAK,IAAIyC,IAAI,CAACC,KAAL,CAAWL,WAAW,CAACM,MAAZ,GAAqB,GAAhC,IAAuC,GAAhD;AACA,mBAAO3C,KAAP;AACH,WAfQ;AAgBP4C,UAAAA,cAAc,EAAE,UAASP,WAAT,EAAsBxC,KAAtB,EAA6B;AACzC,mBAAO,MAAP;AACH;AAlBM;AAbA;AA1BN,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAmEC,CA9FD;;AAiGA,eAAeL,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst MyChart = ({ month, year }) => {\n\n  const [chartData, setChartData] = useState({});\n  const chart = () => {\n    setChartData({\n      labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\",\n    \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\",\n  \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\"],\n  datasets: [\n    {\n      label: ' Visitors',\n      barThickness: \"9\",\n      backgroundColor: 'rgb(31, 110, 215)',\n      hoverBackgroundColor: '#1a5199',\n      minBarLength: 1,\n      data: [3,1,4,2,1,2,1,3,1,4,2,3,4,1,2,4,2,1,2,3,2,1,4,3,1,3,2,1,4,1,2]\n    }\n  ]\n    });\n  }\n\nuseEffect(() => {\n  chart()\n}, [])\n\n\n  \nreturn (\n    <div style={{position: 'relative', height: \"250px\", width: \"90%\", margin: \"0 auto\", filter: 'drop-shadow(0 0 0.15rem #ddddf0)'}}>\n        <Bar\n          data={chartData}\n          options={{\n              title: {\n                  display: true,\n                  text: `${month} ${year}`,\n                  fontSize: 16\n              },\n            responsive: true,\n            aspectRatio: 2,\n            maintainAspectRatio: false,\n            scales: {\n              yAxes: [{\n             ticks: {\n              beginAtZero: true,\n              display: false\n             }\n              }], \n              xAxes: [{\n                gridLines: {\n                  display: false,\n                  \n                }\n              }]\n            },\n            legend:{\n              display:true,\n              position: \"top\"\n            }, tooltips: {\n              backgroundColor: 'rgb(255, 255, 255)',\n              borderColor: 'rgb(156, 174, 211)',\n              borderWidth: 1,\n              titleFontColor: \"#5f5b66\",\n              titleAlign: \"center\",\n              caretPadding: 15,\n              cornerRadius: 5,\n              xPadding: 20,\n              position: \"nearest\",\n              bodyAlign: \"center\",\n              bodyFontStyle: \"bold\",\n              yPadding: 20,\n              callbacks: {\n                title: function(tooltipItem, data) {\n                 \n                    return (\n        `${ data.labels[tooltipItem[0].index].toLocaleString(\"en-US\") } ${month} ${year}`.toLocaleString(\"en-US\")\n                    );\n                  },\n                  label: function(tooltipItem, data) {\n                    var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n                    if (label) {\n                        label += ': ';\n                    }\n                    label += Math.round(tooltipItem.yLabel * 100) / 100;\n                    return label;\n                },\n                  labelTextColor: function(tooltipItem, chart) {\n                      return '#000';\n                  }\n              }\n          }\n          }}\n        /></div>)\n\n}\n\n\nexport default MyChart;"]},"metadata":{},"sourceType":"module"}